@*<div id="loginBlock">
    Введите логин:<br />
    <input id="userName" type="text" />
    <input id="loginBtn" type="button" value="Войти" />
</div><br />*@

<div id="header"></div><br />

<div id="inputForm">
    <input type="text" id="message" />
    <input type="button" id="sendBtn" value="Отправить" />
</div>
<div id="chatroom" class="mb-2">
    @foreach (var post in ViewBag.Messages)
    {
        <p><b>@post.Author</b>: @post.Message</p>
    }
</div>


<script src="/signalr.min.js"></script>
<script>
    let hubUrl = 'https://localhost:5001/chat';
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl(hubUrl)
        .configureLogging(signalR.LogLevel.Information)
        .build();
    let userName = '@User.Identity.Name';
    // получение сообщения от сервера
    hubConnection.on('Send', function (message, userName) {

        // создаем элемент <b> для имени пользователя
        let userNameElem = document.createElement("b");
        userNameElem.appendChild(document.createTextNode(userName + ': '));

        // создает элемент <p> для сообщения пользователя
        let elem = document.createElement("p");
        elem.appendChild(userNameElem);
        elem.appendChild(document.createTextNode(message));

        var firstElem = document.getElementById("chatroom").firstChild;
        document.getElementById("chatroom").insertBefore(elem, firstElem);

    });

    // отправка сообщения на сервер
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        hubConnection.invoke('Send', message, userName);
    });

    hubConnection.start();
</script>