@using PisMirShow.ViewModels;
@using PisMirShow.Models.Account

@model User;
@{
	ViewData["Title"] = "Личный кабинет";
	List<StatisticsViewModel> statistics = ViewBag.Statistic;
	List<StatisticsDateViewModel> statisticWeek = ViewBag.StatisticWeek;
	List<StatisticsDateViewModel> statisticMouth = ViewBag.StatisticMouth;
	List<StatisticsDateViewModel> top = ViewBag.TopTaskChartData;

	List<string> colors = ViewBag.ColorsList;
}

<h1 class="mt-5">
	Профиль пользователя
	@if (Model.Id == ViewBag.CurrentUserId)
	{
		<a><i class="fas fa-user-edit" style="font-size:0.7em" onclick="GetUserInfoById(@Model.Id)"></i></a>
	}
</h1>
<section>
	<div class="container">
		<div class="row">
			<div class="col-md-8">
				<p class="mt-5">Имя: @Model.GetFullName()</p>
				<p class="mt-3">
					Роль в системе:
					@(Model.RoleId == 1 ? "Пользователь" : "Администратор")
				</p>
				<p class="mt-3">Email: @Model.Email</p>
				<p class="mt-3">Дата рождения: @Model.BirthdayDay</p>
				<p class="mt-3">Должность: @Model.OfficePost</p>
				<p class="mt-3">Отдел: @Model.Department</p>
				<p class="mt-3">Номер телефона: @Model.Phone</p>
				<p class="mt-3">Дата регистрации: @Model.RegisterTime</p>
			</div>
			<div class="col-md-4 mt-5 text-center">
				<div id="Avatar">
					<div class="@(Model.Id == ViewBag.CurrentUserId ? "editable":"")" onclick="$('#changeAvatarModal').modal('show')" style="background-image: url('@(string.IsNullOrEmpty(Model.Avatar) ? "/files/avatars/nonavatar.png": Model.Avatar)');">
						<i class="fas fa-pen position-absolute bigFontSize" id="avatarEdit" style="color: white"></i>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<section>
	<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

	<div class="row mt-5">
		<div class="col-lg-6">
			<canvas class="m-auto" id="managerChart"></canvas>
		</div>
		<div class="col-lg-6 mt-5 mt-lg-0">
			<canvas class="m-auto" id="workerChart"></canvas>
		</div>
	</div>
	<div class="row mt-5">
		<div class="col-lg-6">
			<canvas class="m-auto" id="weekChart"></canvas>
		</div>
		<div class="col-lg-6">
			<canvas class="m-auto" id="topChart"></canvas>
		</div>
	</div>
	<div class="col-lg-12 mt-5">
		<canvas class="m-auto" id="monthChart"></canvas>
	</div>

	<script>
		var config = {
			type: 'doughnut',
			data: {
				datasets: [{
					data: [
						@(statistics[0].NotStarted),
							@(statistics[0].Active),
							@(statistics[0].Verification),
							@(statistics[0].Confirmed),
							@(statistics[0].Finished)
						//15,10,20,40,15
					],
					backgroundColor: [
						"#ff0000",
						"#ffa500",
						"#ffff00",
						"#008000",
						"#0000ff"
					],
					label: 'Manager Stat'
				}],
				labels: [
					'% Не начаты',
					'% В работе',
					'% Ожидающие проверки',
					'% Проверенные',
					'% Законченные'
				]
			},
			options: {
				responsive: true,
				legend: {
					position: 'top',
				},
				title: {
					display: true,
					text: 'Выданные задания'
				},
				animation: {
					animateScale: true,
					animateRotate: true
				},
				scales: {
					yAxes: [
						{
							ticks: {
								min: 0,
								stepSize: 1
							}
						}
					]
				}
			}
		};

		var config1 = {
			type: 'doughnut',
			data: {
				datasets: [{
					data: [
						@(statistics[1].NotStarted),
							@(statistics[1].Active),
							@(statistics[1].Verification),
							@(statistics[1].Confirmed),
							@(statistics[1].Finished)
						//40,15,25,10,10
						],
						backgroundColor: [
							"#ff0000",
							"#ffa500",
							"#ffff00",
							"#008000",
							"#0000ff"
						],
						label: 'Worker Stat'
					}],
					labels: [
						'% Не начаты',
						'% В работе',
						'% Ожидающие проверки',
						'% Проверенные',
						'% Законченные'
					]
				},
				options: {
					responsive: true,
					legend: {
						position: 'top',
					},
					title: {
						display: true,
						text: 'Выполняемые задания'
					},
					animation: {
						animateScale: true,
						animateRotate: true
					},
					scales: {
						yAxes: [
							{
								ticks: {
									min: 0,
									stepSize: 1
								}
							}
						]
					}
				}
			};

			var config2 = {
				type: 'line',
				data: {
					labels: [
						@for (int i = 0; i < 7; i++)
						{
							@: "@statisticWeek[i].Date",
						}
					],
					datasets: [{
						label: 'Ваша недельная успеваемость',
						steppedLine: {
							steppedLine: true
						},
						backgroundColor: "#9400D3",
						borderColor: "#9400D3",
						data: [
							@for (int i = 0; i < 7; i++)
						{
							@statisticWeek[i].Value@:,
						}
							//5,4,8,1,5,2,3
						],
						fill: "start"
					}]
				},
				options: {
					responsive: true,
					legend: {
						display: false,
					},
					title: {
						display: true,
						text: 'Ваша недельная успеваемость'
					},
					scales: {
						yAxes: [
							{
								ticks: {
									min: 0,
									stepSize: 1
								}
							}
						]
					}
				}
		};

		var config3 = {
			type: 'horizontalBar',
			data: {
				labels: [
					@foreach (var temp in top)
						{
							@: '@temp.Date',
						}
					//'Авдоничев Александр','Крючков Савелий'
					],
					datasets: [{
						label: 'завершенно',
						backgroundColor: "@colors[0]",
						data: [
							@for(int i = 0; i < top.Count; i++)
							{
								@top[i].Value @:,
							}
							//6,5
						]
					}]
				},
				options: {
					elements: {
						rectangle: {
							borderWidth: 2
						}
					},
					responsive: true,
					legend: {
						display: false,
					},
					title: {
						display: true,
						text: 'TOP (кол-во завершенных тасков за неделю)'
					},
					scales: {
						xAxes: [
							{
								ticks: {
									min: 0,
									stepSize: 1
								}
							}
						]
					}
				}
			};

			var config4 = {
				type: 'line',
				data: {
					labels: [
						@for (int i = 0; i < 30; i++)
						{
							@: "@statisticMouth[i].Date",
						}
					],
					datasets: [{
						label: 'Ваша месячая успеваемость',
						steppedLine: {
							steppedLine: true
						},
						backgroundColor: "#86c5da",
						borderColor: "#86c5da",
						data: [
							@for (int i = 0; i < 30; i++)
						{
							@statisticMouth[i].Value@:,
						}
							//2,3,1,0,7,2,7,3,2,1,4,3,5,0,7,2,7,3,2,1,4,3,5,5,4,8,1,5,2,3
						],
						fill: 'start'
					}]
				},
				options: {
					responsive: true,
					legend: {
						display: false,
					},
					title: {
						display: true,
						text: 'Ваша месячая успеваемость'
					},
					scales: {
						yAxes: [
							{
								ticks: {
									min: 0,
									stepSize: 1
								}
							}
						]
					}
				}
			};

			window.onload = function() {
				var ctx = document.getElementById('managerChart').getContext('2d');
				window.myDoughnut = new Chart(ctx, config);

				var ctx1 = document.getElementById('workerChart').getContext('2d');
				window.myDoughnut1 = new Chart(ctx1, config1);

				var ctx2 = document.getElementById('weekChart').getContext('2d');
				window.myDoughnut1 = new Chart(ctx2, config2);

				var ctx3 = document.getElementById('topChart').getContext('2d');
				window.myDoughnut1 = new Chart(ctx3, config3);

				var ctx4 = document.getElementById('monthChart').getContext('2d');
				window.myDoughnut1 = new Chart(ctx4, config4);
			};

	</script>
</section>

@if (Model.Id == ViewBag.CurrentUserId)
{

	<div class="modal" tabindex="-1" role="dialog" id="UserModal">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="FullName">Изменение данных</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<form>
						<div class="form-group">
							<label for="UserId" class="form-control-label">Id:</label>
							<input type="text" class="form-control" id="UserId" readonly>
						</div>
						<div class="form-group">
							<label for="EditFirstName" class="form-control-label">Имя:</label>
							<input type="text" class="form-control" id="EditFirstName">
						</div>
						<div class="form-group">
							<label for="EditLastName" class="form-control-label">Фамилия:</label>
							<input type="text" class="form-control" id="EditLastName">
						</div>
						<div class="form-group">
							<label for="EditOfficePost" class="form-control-label">Должность:</label>
							<input type="text" class="form-control" id="EditOfficePost">
						</div>
						<div class="form-group">
							<label for="EditUserDepartment" class="form-control-label">Отдел: </label>
							<input type="text" class="form-control" id="EditUserDepartment">
						</div>
						<div class="form-group">
							<label for="EditPhone" class="form-control-label">Номер телефона:</label>
							<input type="text" class="form-control " id="EditPhone">
						</div>
						<div class="form-group">
							<label for="EditEmail" class="form-control-label">Email:</label>
							<input type="text" class="form-control" id="EditEmail">
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
					<button type="button" class="btn btn-primary" onclick="UpdateUserModal()">Сохранить</button>
				</div>
			</div>
		</div>
	</div>

	<div class="modal fade" id="changeAvatarModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
		 aria-hidden="true">
		<div class="modal-dialog modal-md" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<div class="row mt-3 w-100">
						<div class="col-md-12">
							<h4 class="modal-title w-100 text-center" id="myModalLabel">Смена аватара</h4>
						</div>
					</div>
				</div>
				<div class="modal-body">
					<div class="col-md-12">
						<div class="input-group mb-3 mt-3 p-0">
							<div class="custom-file">
								<input type="file" class="custom-file-input" id="avatarImageSource">
								<label class="custom-file-label" for="avatarImageSource" id="avatarImagePath" aria-describedby="Upload" style="overflow: hidden; white-space: nowrap;">@(Model.Avatar ?? "Выберите аватар")</label>
							</div>
							<div class="input-group-append">
								<a class="input-group-text" id="uploadavatarImage">Загрузить</a>
							</div>
						</div>
						<input type="hidden" asp-for="@Model.Avatar" value="@Model.Avatar" id="avatarImage" />
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Закрыть</button>
				</div>
			</div>
		</div>
	</div>

	<script>
    $(document).ready(function () {
		$("#uploadavatarImage").on("click", function() {
				let fileData = $('#avatarImageSource').prop('files')[0];
				let formData = new FormData();
				formData.append('file', fileData);
				$.ajax({
					url: '@Url.Action("ChangeAvatar", "Account")',
					dataType: 'text',
					cache: false,
					contentType: false,
					processData: false,
					data: formData,
					type: 'post',
					success: function(request) {
						$("#avatarImage").val(request);
						$("#Avatar > div").css("background-image", `url('${request}')`)
						$("#avatarImagePath").text(request);
						$('#changeAvatarModal').modal('hide')
					},
					error: function(request) {
						alert(request.error.message);
					}
				});
        });
    });

	function GetUserInfoById(id) {
		$("#UserModal").modal("show");
		var data = new FormData();
		data.append("Id", id);
		$.ajax({
			type: "POST",
			url: "@Url.Action("GetCurrentUserByIdJson","Home")",
			contentType: false,
			processData: false,
			data: data,
			success: function(data) {
				$("#EditFirstName").val(data.firstName);
				$("#EditLastName").val(data.lastName);
				$("#UserId").val(data.id);
				$("#EditOfficePost").val(data.officePost);
				$("#EditUserDepartment").val(data.department);
				$("#EditPhone").val(data.phone);
				$("#EditEmail").val(data.email);
			},
			error: function(request) {
				console.log(request);
				toastr["error"](request.message);
			}
		});
	};

	function UpdateUserModal() {
		var data = new FormData();
		data.append("Id",  $("#UserId").val());
		data.append("FirstName", $("#EditFirstName").val());
		data.append("LastName", $("#EditLastName").val());
		data.append("OfficePost", $("#EditOfficePost").val());
		data.append("Department", $("#EditUserDepartment").val());
		data.append("Phone", $("#EditPhone").val());
		data.append("Email", $("#EditEmail").val());
		$.ajax({
			type: "POST",
			url: "@Url.Action("UpdateUser","Home")",
			contentType: false,
			processData: false,
			data: data,
			success: function(data) {
				toastr["success"]("Запись изменена");
				$("#UserModal").modal("hide");
				setTimeout(location.reload(), 3000);
			},
			error: function(request) {
				toastr["error"](request.message);
			}
		});
	};
	</script>
}